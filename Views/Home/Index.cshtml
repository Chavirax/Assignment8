@{
    ViewData["Title"] = "Home Page";
}
@model ProjectListViewModel
<!--Salvador Morales Aguayo
Section 4

Program Description : It took a full year to develop, test, and debug the Amazon website. We are going to build
something similar in just a few weeks using ASP.NET Core MVC over the course of the next
few assignments. This assignment focuses on creating the database portion of the web app.
Create a web app for an online bookstore

The part of the BOOTSTRAP requirements are found in this page and in the layout within the Views Folder
-->
<!--This is just the display index page for the data from the database.-->

<div class="text-center">
    <h1 class="display-4">Welcome to Mexizon</h1>
    <h3>Check out our list of books.</h3>
    <br />
</div>

@foreach (var i in Model.Books)
{
    <!--BOOTSTRAP 1:  I decided to use a list group class and List group Items to make it look more like a list and it prints out the lines separating the different attributes from the class!-->
    <!--BOOTSTRAP 2:  I also had to play around with the width and the margin to make sure it was centered and it didn't look out of place in the page!-->
    <div class="list-group" style="width:800px; margin:0 auto;">
        <h4 class="list-group-item"><strong>@i.Title</strong></h4>
        <p class="list-group-item">Author: @i.Author</p>
        <p class="list-group-item">Publisher: @i.Publisher</p>
        <p class="list-group-item">ISBN: @i.Isbn</p>
        <p class="list-group-item">Number of Pages: @i.PageNumbers</p> <!--Number of pages was added after the first set of seed data.-->
        <p class="list-group-item">Price: $@i.Price</p>
    </div>
    <br />
}
<!--This is where the page navigation is located, it's dynamically generated by how many pages are there.-->
<div page-model="@Model.PagingInfo" page-action="Index" page-Classes-enabled="true" page-class="btn"
     page-class-normal="btn-outline-dark" page-class-selected="btn-primary" class="btn-group pull-right m-1"></div>

